{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "synapseproyectomaestria"
		},
		"synapseproyectomaestria-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'synapseproyectomaestria-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:synapseproyectomaestria.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"synapseproyectomaestria-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://datalakeproyectomaestria.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/Pipeline - Process PDF Files - Stage Zone')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Reafing PDF Files - Stage Zone",
						"type": "SynapseNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebook": {
								"referenceName": "Process PDF Files - Stage Zone",
								"type": "NotebookReference"
							},
							"parameters": {
								"pdf_user": {
									"value": "bsmoralesg@outlook.com",
									"type": "string"
								},
								"pdf_type": {
									"value": "Tarjeta Credito",
									"type": "string"
								},
								"pdf_fecha": {
									"value": "10012023",
									"type": "string"
								},
								"pdf_file": {
									"value": "Extracto_7358651_202108_TARJETA_VISA_2166 (1).pdf",
									"type": "string"
								},
								"pdf_password": {
									"value": "1233491047",
									"type": "string"
								}
							},
							"snapshot": true,
							"sparkPool": {
								"referenceName": "spproymaestria",
								"type": "BigDataPoolReference"
							},
							"executorSize": "Small",
							"conf": {
								"spark.dynamicAllocation.enabled": true
							},
							"driverSize": "Small"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/notebooks/Process PDF Files - Stage Zone')]",
				"[concat(variables('workspaceId'), '/bigDataPools/spproymaestria')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/synapseproyectomaestria-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('synapseproyectomaestria-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/synapseproyectomaestria-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('synapseproyectomaestria-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/primera carga')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseDelimitedTextFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseDelimitedTextFormat] \n\tWITH ( FORMAT_TYPE = DELIMITEDTEXT ,\n\t       FORMAT_OPTIONS (\n\t\t\t FIELD_TERMINATOR = ',',\n\t\t\t USE_TYPE_DEFAULT = FALSE\n\t\t\t))\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'stagedata_datalakeproyectomaestria_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [stagedata_datalakeproyectomaestria_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION = 'abfss://stagedata@datalakeproyectomaestria.dfs.core.windows.net', \n\t\tTYPE = HADOOP \n\t)\nGO\n\nCREATE EXTERNAL TABLE Extractos.Data (\n\t[filename] nvarchar(4000),\n\t[rmse] float,\n\t[spectral_centroid] float,\n\t[spectral_bandwidth] float,\n\t[rolloff] float,\n\t[zero_crossing_rate] float,\n\t[mfcc1] float,\n\t[mfcc2] float,\n\t[mfcc3] float,\n\t[mfcc4] float,\n\t[mfcc5] float,\n\t[mfcc6] float,\n\t[mfcc7] float,\n\t[mfcc8] float,\n\t[mfcc9] float,\n\t[mfcc10] float,\n\t[mfcc11] float,\n\t[mfcc12] float,\n\t[mfcc13] float,\n\t[mfcc14] float,\n\t[mfcc15] float,\n\t[mfcc16] float,\n\t[mfcc17] float,\n\t[mfcc18] float,\n\t[mfcc19] float,\n\t[mfcc20] float,\n\t[label] nvarchar(4000)\n\t)\n\tWITH (\n\tLOCATION = 'dataset.csv',\n\tDATA_SOURCE = [stagedata_datalakeproyectomaestria_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseDelimitedTextFormat]\n\t)\nGO\n\n\nSELECT TOP 100 * FROM Extractos.Data\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "sqlpoolproyectomaestria",
						"poolName": "sqlpoolproyectomaestria"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Process PDF Files - Stage Zone')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "LecturaScripts"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "spproymaestria",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "08eb37ac-3993-4e8e-9123-413c9befc2dd"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/01c2d20c-2c85-4121-8018-3a801e74d84c/resourceGroups/ProyectoMaestria/providers/Microsoft.Synapse/workspaces/synapseproyectomaestria/bigDataPools/spproymaestria",
						"name": "spproymaestria",
						"type": "Spark",
						"endpoint": "https://synapseproyectomaestria.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/spproymaestria",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.3",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"#Importando Librerias\r\n",
							"\r\n",
							"from pyspark.sql import SparkSession\r\n",
							"from io import BytesIO\r\n",
							"from pdfminer.pdfinterp import PDFResourceManager, PDFPageInterpreter\r\n",
							"from pdfminer.pdfpage import PDFPage\r\n",
							"from pdfminer.converter import TextConverter\r\n",
							"from pdfminer.layout import LAParams\r\n",
							"import io\r\n",
							""
						],
						"outputs": [],
						"execution_count": 21
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"#Creando sesion \r\n",
							"\r\n",
							"spark = SparkSession.builder \\\r\n",
							"    .appName(\"PDF Extraction\") \\\r\n",
							"    .getOrCreate()"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"tags": [
								"parameters"
							]
						},
						"source": [
							"#Capturar Parametros\r\n",
							"pdf_user = \"\"\r\n",
							"pdf_type = \"\"\r\n",
							"pdf_fecha = \"\"\r\n",
							"pdf_file = \"\"\r\n",
							"pdf_password = \"\""
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"#Consolidar Variables\r\n",
							"\r\n",
							"#Ruta Origen\r\n",
							"pdf_path_origin = \"abfss://stagefiles@datalakeproyectomaestria.dfs.core.windows.net/\"+pdf_user+\"/\"+pdf_type+\"/\"+pdf_fecha+\"/\"+pdf_file\r\n",
							"\r\n",
							"#Ruta Destino\r\n",
							"pdf_file = pdf_file.replace(\".pdf\", \".Parquet\")\r\n",
							"pdf_path_sink = \"abfss://stagedata@datalakeproyectomaestria.dfs.core.windows.net/\"+pdf_user+\"/\"+pdf_type+\"/\"+pdf_fecha+\"/\"+pdf_file"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"#Procesar informacion - Capturar informacion\r\n",
							"\r\n",
							"\r\n",
							"# Leer the PDF file como bytes\r\n",
							"pdf_bytes = spark.read \\\r\n",
							"    .format(\"binaryFile\") \\\r\n",
							"    .option(\"path\", pdf_path_origin) \\\r\n",
							"    .load() \\\r\n",
							"    .select(\"content\") \\\r\n",
							"    .collect()[0][0]\r\n",
							"\r\n",
							"# crear un BytesIO stream de the PDF bytes\r\n",
							"pdf_stream = BytesIO(pdf_bytes)\r\n",
							"pdf_stream.seek(0)\r\n",
							"\r\n",
							"# Crear objeto PDFResourceManager y configurar parametros\r\n",
							"rsrcmgr = PDFResourceManager()\r\n",
							"retstr = io.StringIO()\r\n",
							"\r\n",
							"# Crear Objeto  TextConverter para las paginas dle PDF\r\n",
							"laparams = LAParams()\r\n",
							"device = TextConverter(rsrcmgr, retstr, laparams=laparams)\r\n",
							"\r\n",
							"# Crear objeto PDFPageInterpreter\r\n",
							"interpreter = PDFPageInterpreter(rsrcmgr, device)\r\n",
							"\r\n",
							"# Porcesar cada pagina del archivo PDF\r\n",
							"password = pdf_password.encode()\r\n",
							"pages = PDFPage.get_pages(pdf_stream, password=password, check_extractable=True)\r\n",
							"for page in pages:\r\n",
							"    interpreter.process_page(page)\r\n",
							"\r\n",
							"# Obtener el texto extraido del objeto StringIO\r\n",
							"pdf_content = retstr.getvalue()\r\n",
							"\r\n",
							"# Cerrar el objeto StringIO\r\n",
							"device.close()\r\n",
							"retstr.close()"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"print(pdf_content)"
						],
						"outputs": [],
						"execution_count": null
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"tags": []
						},
						"source": [
							"Generar un arcihvo con la data Cruda\r\n",
							"\r\n",
							"Crear un dataframe con la informaicon extraida\r\n",
							"content_df = spark.createDataFrame([(pdf_content,)], [\"contenido\"])\r\n",
							"\r\n",
							"# Crear archivo  Parquet en el contendor\r\n",
							"#container_path = \"abfss://stagefiles@datalakeproyectomaestria.dfs.core.windows.net/Extracto_7358651_202108_TARJETA_VISA_2166.pdf\"\r\n",
							"content_df.write.mode(\"overwrite\").parquet(pdf_path_sink)\r\n",
							""
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Reading PDF File - Test Concept')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "SandBoxScripts"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "spproymaestria",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "c90baa01-a231-47f8-9d52-8eb2a1e7c0f0"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/01c2d20c-2c85-4121-8018-3a801e74d84c/resourceGroups/ProyectoMaestria/providers/Microsoft.Synapse/workspaces/synapseproyectomaestria/bigDataPools/spproymaestria",
						"name": "spproymaestria",
						"type": "Spark",
						"endpoint": "https://synapseproyectomaestria.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/spproymaestria",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.3",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"tags": []
						},
						"source": [
							"#Procesamiento con PyPDF2\r\n",
							"\r\n",
							"from pyspark.sql import SparkSession\r\n",
							"from io import BytesIO\r\n",
							"import PyPDF2\r\n",
							"\r\n",
							"pdf_path = \"abfss://stagefiles@datalakeproyectomaestria.dfs.core.windows.net/Extracto_7358651_202108_TARJETA_VISA_2166.pdf\"\r\n",
							"pdf_password = \"1233491047\"\r\n",
							"\r\n",
							"# Read the PDF file as bytes\r\n",
							"pdf_bytes = spark.read \\\r\n",
							"    .format(\"binaryFile\") \\\r\n",
							"    .option(\"path\", pdf_path) \\\r\n",
							"    .load() \\\r\n",
							"    .select(\"content\") \\\r\n",
							"    .collect()[0][0]\r\n",
							"\r\n",
							"# Create a BytesIO stream from the PDF bytes\r\n",
							"pdf_stream = BytesIO(pdf_bytes)\r\n",
							"pdf_stream.seek(0)  # Ensure the stream is at the beginning\r\n",
							"\r\n",
							"# Create a PdfReader object from the PDF stream\r\n",
							"pdf_reader = PyPDF2.PdfReader(pdf_stream)\r\n",
							"\r\n",
							"# Check if the PDF file is encrypted (password-protected)\r\n",
							"if pdf_reader.is_encrypted:\r\n",
							"    # Decrypt the PDF file with the provided password\r\n",
							"    pdf_reader.decrypt(pdf_password)\r\n",
							"\r\n",
							"# Extract text from the PDF pages\r\n",
							"pdf_content = \"\"\r\n",
							"for page_num in range(len(pdf_reader.pages)):\r\n",
							"    page = pdf_reader.pages[page_num]\r\n",
							"    pdf_content += page.extract_text()\r\n",
							"\r\n",
							"print(pdf_content)\r\n",
							"\r\n",
							"# Perform further processing or analysis on the content\r\n",
							"# For example, you can save it to a storage location or perform text mining operations.\r\n",
							""
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"#PROCESAMIENTO CON Rapid Miner\r\n",
							"\r\n",
							"from pyspark.sql import SparkSession\r\n",
							"from io import BytesIO\r\n",
							"from pdfminer.pdfinterp import PDFResourceManager, PDFPageInterpreter\r\n",
							"from pdfminer.pdfpage import PDFPage\r\n",
							"from pdfminer.converter import TextConverter\r\n",
							"from pdfminer.layout import LAParams\r\n",
							"import io\r\n",
							"\r\n",
							"spark = SparkSession.builder \\\r\n",
							"    .appName(\"PDF Extraction\") \\\r\n",
							"    .getOrCreate()\r\n",
							"\r\n",
							"pdf_path = \"abfss://stagefiles@datalakeproyectomaestria.dfs.core.windows.net/Extracto_7358651_202108_TARJETA_VISA_2166.pdf\"\r\n",
							"pdf_password = \"1233491047\"\r\n",
							"\r\n",
							"# Read the PDF file as bytes\r\n",
							"pdf_bytes = spark.read \\\r\n",
							"    .format(\"binaryFile\") \\\r\n",
							"    .option(\"path\", pdf_path) \\\r\n",
							"    .load() \\\r\n",
							"    .select(\"content\") \\\r\n",
							"    .collect()[0][0]\r\n",
							"\r\n",
							"# Create a BytesIO stream from the PDF bytes\r\n",
							"pdf_stream = BytesIO(pdf_bytes)\r\n",
							"pdf_stream.seek(0)  # Ensure the stream is at the beginning\r\n",
							"\r\n",
							"# Create PDFResourceManager object and set parameters\r\n",
							"rsrcmgr = PDFResourceManager()\r\n",
							"retstr = io.StringIO()\r\n",
							"\r\n",
							"# Create TextConverter object for the PDF page interpretation\r\n",
							"laparams = LAParams()\r\n",
							"device = TextConverter(rsrcmgr, retstr, laparams=laparams)\r\n",
							"\r\n",
							"# Create PDFPageInterpreter object\r\n",
							"interpreter = PDFPageInterpreter(rsrcmgr, device)\r\n",
							"\r\n",
							"# Process each page of the PDF file\r\n",
							"password = pdf_password.encode()\r\n",
							"pages = PDFPage.get_pages(pdf_stream, password=password, check_extractable=True)\r\n",
							"for page in pages:\r\n",
							"    interpreter.process_page(page)\r\n",
							"\r\n",
							"# Get the extracted text from the StringIO object\r\n",
							"pdf_content = retstr.getvalue()\r\n",
							"\r\n",
							"# Close the StringIO objects\r\n",
							"device.close()\r\n",
							"retstr.close()\r\n",
							"\r\n",
							"print(pdf_content)\r\n",
							"\r\n",
							"\r\n",
							"# Perform further processing or analysis on the content\r\n",
							"# For example, you can save it to a storage location or perform text mining operations.\r\n",
							""
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							""
						],
						"outputs": [],
						"execution_count": null
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/writte a file')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "SandBoxScripts"
				},
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "spproymaestria",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "aabd014b-6f70-4d0c-a1bd-7dea8ca21cc0"
					}
				},
				"metadata": {
					"saveOutput": true,
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/01c2d20c-2c85-4121-8018-3a801e74d84c/resourceGroups/ProyectoMaestria/providers/Microsoft.Synapse/workspaces/synapseproyectomaestria/bigDataPools/spproymaestria",
						"name": "spproymaestria",
						"type": "Spark",
						"endpoint": "https://synapseproyectomaestria.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/spproymaestria",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net"
						},
						"sparkVersion": "3.3",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"from pyspark.sql.types import StructType,StructField, StringType, IntegerType\r\n",
							"data2 = [(\"James\",\"Smith\",\"Joe\",\"4355\",\"M\",3000),\r\n",
							"    (\"Michael\",\"Rose\",\"Edward\",\"40288\",\"F\",4000)\r\n",
							"  ]\r\n",
							"\r\n",
							"schema = StructType([ \\\r\n",
							"    StructField(\"firstname\",StringType(),True), \\\r\n",
							"    StructField(\"middlename\",StringType(),True), \\\r\n",
							"    StructField(\"lastname\",StringType(),True), \\\r\n",
							"    StructField(\"id\", StringType(), True), \\\r\n",
							"    StructField(\"gender\", StringType(), True), \\\r\n",
							"    StructField(\"salary\", IntegerType(), True) \\\r\n",
							"  ])\r\n",
							" \r\n",
							"df = spark.createDataFrame(data=data2,schema=schema)\r\n",
							"\r\n",
							"df.write.csv(\"abfss://stagefiles@datalakeproyectomaestria.dfs.core.windows.net/validate_permissions.csv\")"
						],
						"outputs": [],
						"execution_count": 5
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sparkConfiguration1')]",
			"type": "Microsoft.Synapse/workspaces/sparkConfigurations",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"configs": {
					"spark.jars.packages": "org.apache.tika:tika-parsers:1.26"
				},
				"created": "2023-05-30T23:19:10.1900000-05:00",
				"createdBy": "brallamsantiago.morales334@comunidadunir.net",
				"annotations": [],
				"configMergeRule": {
					"artifact.currentOperation.spark.jars.packages": "replace"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sqlpoolproyectomaestria')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastus2"
		},
		{
			"name": "[concat(parameters('workspaceName'), '/spproymaestria')]",
			"type": "Microsoft.Synapse/workspaces/bigDataPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"autoPause": {
					"enabled": true,
					"delayInMinutes": 10
				},
				"autoScale": {
					"enabled": false,
					"maxNodeCount": 19,
					"minNodeCount": 3
				},
				"nodeCount": 3,
				"nodeSize": "Small",
				"nodeSizeFamily": "MemoryOptimized",
				"sparkVersion": "3.3",
				"libraryRequirements": {
					"content": "name: proyectomaestiraenv\r\nchannels:\r\n- defaults\r\ndependencies:\r\n- pip:\r\n  - Tika\r\n  - PyPDF2\r\n  - pdfminer",
					"filename": "enviroment.yml",
					"time": "2023-05-31T05:18:23.8262921Z"
				},
				"isComputeIsolationEnabled": false,
				"sessionLevelPackagesEnabled": true,
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastus2"
		}
	]
}